@use 'sass:math';

.flex,
.row {
  display: flex;
  flex-wrap: wrap;
}
.column {
  display: flex;
  flex-direction: column;
}
.col {
  flex: 1;
}
.row > .col {
  height: 100%;
}

[class*='col-'] {
  flex: unset;
  width: unset;
}
@for $num from 1 through 12 {
  .col-#{$num} {
    flex-basis: (math.div(100%, 12) * $num);
  }

  .row > .col-#{$num} {
    height: 100%;
  }
}

.flex > *,
.row > * {
  width: auto;
  min-width: 0;
  max-width: 100%;
}

.flex > *,
.column > * {
  height: auto;
  min-height: 0;
  max-height: 100%;
}

$alignItems:
  'stretch' stretch,
  'start' flex-start,
  'center' center,
  'end' flex-end;
$justifyContent:
  'start' flex-start,
  'between' space-between,
  'around' space-around,
  'center' center,
  'end' flex-end;
$alignSelf:
  'start' flex-start,
  'center' center,
  'end' flex-end;

@each $name, $value in $alignItems {
  .items-#{$name} {
    align-items: $value;
  }
}

@each $name, $value in $justifyContent {
  .justify-#{$name} {
    justify-content: $value;
  }
}

@each $name, $value in $alignSelf {
  .self-#{$name} {
    align-self: $value;
  }
}

$gap:
  'xs' 4px,
  'sm' 8px,
  'md' 16px,
  'lg' 32px,
  'xl' 64px;
$gap-default: 16px;

.gap {
  gap: $gap-default;
}
.gap-x {
  gap: 0 $gap-default;
}
.gap-y {
  gap: $gap-default 0;
}

@each $name, $size in $gap {
  .gap-#{$name} {
    gap: $size;
  }
  .gap-x-#{$name} {
    gap: 0 $size;
  }
  .gap-y-#{$name} {
    gap: $size 0;
  }
  @each $name2, $size2 in $gap {
    .gap-#{$name}-#{$name2} {
      gap: $size $size2;
    }
  }
}

.separator,
.separator__vertical {
  --separator-color: var(--vp-c-gray-1);
  background-color: var(--separator-color);
}

.separator {
  width: 100%;
  height: 1px;
}

.separator__vertical {
  width: 1px;
  height: auto;
}

@mixin ellipse($line) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
  line-height: 1.5em;
  max-height: $line * 1.5em;
}

.url-embed {
  position: relative;
  height: 150px;
  text-decoration: none !important;
  background: #fff;
  &::before {
    content: '';
    display: block;
    background: var(--theme-color);
    width: 5px;
    height: auto;
    left: 0;
    top: 0;
  }
  &:hover {
    .url-embed__title {
      text-decoration: underline;
    }
  }

  &__container {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-xs);
    padding: var(--space-sm) var(--space-md);
    border-top: 1px solid var(--vp-c-gray-1);
    border-bottom: 1px solid var(--vp-c-gray-1);
  }
  &__title {
    @include ellipse(1);
  }
  &__desc {
    color: #999;
    font-weight: normal;
    font-size: 14px;
    line-height: 1.5em;
    overflow: hidden;
    @include ellipse(3);
  }
  &__info {
    justify-self: flex-end;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: var(--space-xs);
    font-size: 12px;
    color: #a2a2a2;
    span {
      @include ellipse(1);
    }
    img {
      width: 16px;
      height: 16px;
    }
  }

  &__image {
    height: 100%;
    border-top: 1px solid var(--vp-c-gray-1);
    border-bottom: 1px solid var(--vp-c-gray-1);
    display: flex;
    img {
      width: 100%;
      height: auto;
    }
  }

  > div:last-child {
    border-right: 1px solid var(--vp-c-gray-1);
  }
}
